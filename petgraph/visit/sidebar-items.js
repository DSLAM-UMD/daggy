initSidebarItems({"struct":[["AsUndirected","Wrapper type for walking the graph as if it is undirected"],["Bfs","A breadth first search (BFS) of a graph."],["BfsIter","An iterator for a breadth first traversal of a graph."],["Dfs","Visit nodes of a graph in a depth-first-search (DFS) emitting nodes in preorder (when they are first discovered)."],["DfsIter","An iterator for a depth first traversal of a graph."],["DfsPostOrder","Visit nodes in a depth-first-search (DFS) emitting nodes in postorder (each node after all its decendants have been emitted)."],["Reversed","Wrapper type for walking the graph as if all edges are reversed."],["ReversedEdgeRef","An edge reference for `Reversed`."],["ReversedEdgeReferences","An iterator of edge references for `Reversed`."],["Topo","A topological order traversal for a graph."]],"trait":[["EdgeRef","An edge reference"],["GetAdjacencyMatrix","Create or access the adjacency matrix of a graph."],["GraphBase","Base graph trait: defines the associated node identifier and edge identifier types."],["GraphEdgeRef","A graph that defines edge references"],["GraphRef","A copyable reference to a graph."],["IntoEdgeReferences","Access to the sequence of the graph’s edges"],["IntoExternals","Access to the graph’s nodes without edges to them (`Incoming`) or from them (`Outgoing`)."],["IntoNeighbors","Access to the neighbors of each node"],["IntoNeighborsDirected","Access to the neighbors of each node, through incoming or outgoing edges."],["IntoNodeIdentifiers","Access to the sequence of the graph’s `NodeId`s."],["NodeCompactIndexable","The graph’s `NodeId`s map to indices, in a range without holes."],["NodeIndexable","The graph’s `NodeId`s map to indices"],["VisitMap","A mapping for storing the visited status for NodeId `N`."],["Visitable","A graph that can create a map that tracks the visited status of its nodes."]]});